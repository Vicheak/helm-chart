# Default values for appserver-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the namespace base
namespaceBase:
  enabled: true
  name: myapp

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 3

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: mirror-registry.uat.acmobile.local:8443/myapp/ping-server-app
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "uat-v0.0.8"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "ping-server-app"
fullnameOverride: "ping-server-app"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "myapp-sv-account"

deploymentAnnotations:
  reloader.stakater.com/auto: 'true'

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations:
  sidecar.istio.io/inject: 'true'
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels:
  app: ping-server-app

podSecurityContext: {}
  # fsGroup: 2000

# security context for container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

pod:
  restartPolicy: Always
  schedulerName: default-scheduler
  terminationGracePeriodSeconds: 30

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8081
  portName: 8081http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: appserver.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: appserver-tls
  #    hosts:
  #      - appserver.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: '1'
    memory: 1Gi
  requests:
    cpu: '500m'
    memory: 500Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /API/V1/PNG/PING
#     port: http
readinessProbe:
  httpGet:
    path: /API/V1/PNG/PING
    port: 8081
    scheme: HTTP
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

terminationMessagePolicy: File
terminationMessagePath: /dev/termination-log

dnsPolicy: ClusterFirst

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 6
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

env:
  - name: NODE_IP
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: status.hostIP
  - name: TZ
    value: Asia/Phnom_Penh

# Additional volumes on the output Deployment definition.
volumes:
- name: configuration-ping-server-app
  configMap:
    name: configuration-ping-server-app

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: configuration-ping-server-app
  mountPath: "/app/config/ping-server-app"

nodeSelector: {}

tolerations: []

affinity: {}

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%
revisionHistoryLimit: 10
progressDeadlineSeconds: 600

# This will define test block
test:
  image: mirror-registry.uat.acmobile.local:8443/devops/busybox
  imageTag: latest

